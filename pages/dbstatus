// // pages/CheckSupabaseConnection.tsx
// import React, { useEffect, useState } from 'react';
// import { supabase } from '../utils/supabaseClient'; // adjust the path based on your project structure

// const dbstatus = () => {
//     const [status, setStatus] = useState('Checking connection...');
//     const [errorDetails, setErrorDetails] = useState<string | null>(null);

//     useEffect(() => {
//         const checkConnection = async () => {
//             try {
//                 // Attempt to fetch a small sample of data from a table, adjust "your_table_name"
//                 let { data, error } = await supabase
//                     .from('activities')
//                     .select('*')
//                     .limit(1);

//                 if (error) {
//                     throw error;
//                 }

//                 if (data) {
//                     setStatus('Successfully connected to Supabase!');
//                 } else {
//                     setStatus('Connected, but no data found.');
//                 }
//             } catch (error: unknown) {
//                 if (error instanceof Error) {
//                     // Now TypeScript knows this is an Error object, and you can access its properties
//                     setErrorDetails(error.message);
//                     setStatus('Failed to connect to Supabase.');
//                 } else {
//                     // Handle cases where the caught error is not an Error object
//                     setErrorDetails('An unexpected error occurred');
//                 }
//             }
//         };

//         checkConnection();
//     }, []);

//     return (
//         <div>
//             <h1>Supabase Connection Status</h1>
//             <p>{status}</p>
//             {errorDetails && (
//                 <div>
//                     <h2>Error Details:</h2>
//                     <p>{errorDetails}</p>
//                 </div>
//             )}
//         </div>
//     );
// };

// export default dbstatus;
